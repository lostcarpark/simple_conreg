<?php

use Drupal\simple_conreg\Member;
use Drupal\simple_conreg\SimpleConregConfig;
use Drupal\conreg_zambia\Zambia;
use Drupal\conreg_zambia\ZambiaUser;

/*
 * Implement hook_convention_member_updated()
 *
 * Called when member changes.
 * Check if member on Zambia. If so, push update to Zambia member record.
 * If not, check if relevant options checked, and if create Zambia invite.
 *
 * We only push to Zambia on update.
 */

function conreg_zambia_convention_member_updated(Member $member)
{
  // First, make sure member is paid and approved, and not deleted.
  if (!$member->is_paid || !$member->is_approved || $member->is_deleted) {
    return;
  }

  // Once confirmed, we'll see if user is already on Zambia.
  $zambia = new Zambia(SimpleConregConfig::getConfig($member->eid));
  $user = new ZambiaUser($zambia);
  if ($user->load($member->mid)) {
    // Member is already on Zambia, so we want to update their details, even if they've changed their preferences.
    $user->save($member, false);
  }
  else {
    // Member not on Zambia, so make sure automatic member saving is active.
    if ($zambia->config->get('zambia_auto.enabled')) {
      // Next, check at least one of the expected member options has been selected by the member.
      $optionFields =  $zambia->config->get('zambia.option_fields');
      $match = FALSE;
      foreach ($optionFields as $optId => $optVal) {
        if ($optVal) {
          if (isset($member->options[$optId]) && $member->options[$optId]->isSelected) {
            $match = TRUE;
          }
        }
      }
      // If option match found, proceed to update or add member.
      if ($match) {
        // Save new user.
        $user->save($member, false);
        // Send email to user.
        $zambia->sendInviteEmail($user);
      }
    }
  }

}
